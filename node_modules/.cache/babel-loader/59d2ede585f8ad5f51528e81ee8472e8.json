{"ast":null,"code":"import _toConsumableArray from \"/home/sudipta/Desktop/Youtube-covid/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/sudipta/Desktop/Youtube-covid/covid-19-tracker/src/util.js\",\n    _this = this;\n\nimport React from 'react';\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 2000\n  }\n};\nexport var sortData = function sortData(data) {\n  var sortedData = _toConsumableArray(data);\n\n  sortedData.sort(function (a, b) {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\nexport var showDataOnMap = function showDataOnMap(data) {\n  var casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'cases';\n  return data.map(function (country) {\n    return /*#__PURE__*/_jsxDEV(Circle, {\n      center: [country.countryInfo.lat, country.countryInfo.long],\n      fillOpacity: 0.4,\n      color: casesTypeColors[casesType].hex,\n      fillColor: casesTypeColors[casesType].hex,\n      radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"url(\".concat(country.countryInfo.flag, \")\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: country.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Cases:\", numeral(country.cases).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Recovered:\", numeral(country.recovered).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Deaths:\", numeral(country.deaths).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, _this);\n  });\n};","map":{"version":3,"sources":["/home/sudipta/Desktop/Youtube-covid/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA6B,eAA7B;;AAEA,IAAMC,eAAe,GAAE;AACnBC,EAAAA,KAAK,EAAC;AACFC,IAAAA,GAAG,EAAC,SADF;AAGFC,IAAAA,UAAU,EAAC;AAHT,GADa;AAMnBC,EAAAA,SAAS,EAAC;AAENF,IAAAA,GAAG,EAAC,SAFE;AAKNC,IAAAA,UAAU,EAAC;AALL,GANS;AAanBE,EAAAA,MAAM,EAAC;AAEHH,IAAAA,GAAG,EAAC,SAFD;AAKHC,IAAAA,UAAU,EAAC;AALR;AAbY,CAAvB;AAuBA,OAAO,IAAMG,QAAQ,GAAE,SAAVA,QAAU,CAACC,IAAD,EAAS;AAC5B,MAAMC,UAAU,sBAAMD,IAAN,CAAhB;;AAEAC,EAAAA,UAAU,CAACC,IAAX,CAAgB,UAACC,CAAD,EAAGC,CAAH,EAAS;AACrB,QAAGD,CAAC,CAACT,KAAF,GAASU,CAAC,CAACV,KAAd,EAAoB;AAChB,aAAO,CAAC,CAAR;AACH,KAFD,MAEK;AACD,aAAO,CAAP;AACH;AACJ,GAND;AAOA,SAAOO,UAAP;AACH,CAXM;AAaP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACL,IAAD;AAAA,MAAOM,SAAP,uEAAiB,OAAjB;AAAA,SACzBN,IAAI,CAACO,GAAL,CAAS,UAAAC,OAAO;AAAA,wBACZ,QAAC,MAAD;AACI,MAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAAyBF,OAAO,CAACC,WAAR,CAAoBE,IAA7C,CADZ;AAEI,MAAA,WAAW,EAAE,GAFjB;AAGI,MAAA,KAAK,EAAElB,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAHtC;AAII,MAAA,SAAS,EAAEF,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAJ1C;AAKI,MAAA,MAAM,EACFiB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAA8Bb,eAAe,CAACa,SAAD,CAAf,CAA2BV,UANjE;AAAA,6BASI,QAAC,KAAD;AAAA,+BACI;AAAA,kCACI;AAAK,YAAA,KAAK,EAAE;AAACkB,cAAAA,eAAe,gBAAQN,OAAO,CAACC,WAAR,CAAoBM,IAA5B;AAAhB;AAAZ;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA,sBAAMP,OAAO,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA,iCAAYlB,OAAO,CAACkB,OAAO,CAACd,KAAT,CAAP,CAAuBsB,MAAvB,CAA8B,KAA9B,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA,qCAAgB1B,OAAO,CAACkB,OAAO,CAACX,SAAT,CAAP,CAA2BmB,MAA3B,CAAkC,KAAlC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI;AAAA,kCAAa1B,OAAO,CAACkB,OAAO,CAACV,MAAT,CAAP,CAAwBkB,MAAxB,CAA+B,KAA/B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,aADY;AAAA,GAAhB,CADyB;AAAA,CAAtB","sourcesContent":["import React from 'react';\nimport numeral from \"numeral\";\nimport { Circle, Popup} from \"react-leaflet\";\n\nconst casesTypeColors ={\n    cases:{\n        hex:\"#CC1034\",\n       \n        multiplier:800,\n    },\n    recovered:{\n\n        hex:\"#7dd71d\",\n     \n   \n        multiplier:1200,\n    },\n    deaths:{\n\n        hex:\"#fb4443\",\n     \n        \n        multiplier:2000,\n    },\n\n}\n\nexport const sortData =(data) =>{\n    const sortedData =[...data];\n\n    sortedData.sort((a,b) => {\n        if(a.cases >b.cases){\n            return -1;\n        }else{\n            return 1;\n        }\n    })\n    return sortedData;\n}\n\nexport const showDataOnMap = (data, casesType='cases') =>(\n    data.map(country =>(\n        <Circle \n            center={[country.countryInfo.lat,country.countryInfo.long]}\n            fillOpacity={0.4}\n            color={casesTypeColors[casesType].hex}\n            fillColor={casesTypeColors[casesType].hex}\n            radius={\n                Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier\n            }\n        >\n            <Popup>\n                <div>\n                    <div style={{backgroundImage:`url(${country.countryInfo.flag})`}}/>\n                    <div>{country.country}</div>\n                    <div>Cases:{numeral(country.cases).format(\"0,0\")}</div>\n                    <div>Recovered:{numeral(country.recovered).format(\"0,0\")}</div>\n                    <div>Deaths:{numeral(country.deaths).format(\"0,0\")}</div>\n                </div>\n\n            </Popup>\n\n            </Circle>\n    ))\n)"]},"metadata":{},"sourceType":"module"}