{"ast":null,"code":"import _regeneratorRuntime from \"/home/sudipta/Desktop/Youtube-covid/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sudipta/Desktop/Youtube-covid/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sudipta/Desktop/Youtube-covid/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sudipta/Desktop/Youtube-covid/covid-19-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { FormControl, MenuItem, Select, Card, CardContent } from '@material-ui/core';\nimport './App.css';\nimport Table from './Table';\nimport { sortData } from './util.js';\nimport InfoBox from './InfoBox';\nimport LineGraph from './LineGraph';\nimport MapView from './MapView';\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      countries = _useState2[0],\n      setCountries = _useState2[1];\n\n  var _useState3 = useState('Worldwide'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      country = _useState4[0],\n      setInputCountry = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      countryInfo = _useState6[0],\n      setCountryInfo = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tableData = _useState8[0],\n      setTableData = _useState8[1];\n\n  var _useState9 = useState({\n    lat: 34.80746,\n    lng: -55.4796\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mapCenter = _useState10[0],\n      setMapCenter = _useState10[1];\n\n  var _useState11 = useState(4),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mapZoom = _useState12[0],\n      setMapZoom = _useState12[1]; // https://disease.sh/v3/covid-19/countries\n  //UseEffect-- runs a piece of code based on given condition\n\n\n  useEffect(function () {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(function () {\n    //async -> sends a request , wait for its response.\n    var getCountriesData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  var countries = data.map(function (country) {\n                    return {\n                      name: country.country,\n                      value: country.countryInfo.iso2\n                    };\n                  });\n                  setCountries(countries); // dropdown\n\n                  var sortedData = sortData(data); // table data.. whole data is passed in sortData.\n\n                  setTableData(sortedData);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getCountriesData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getCountriesData();\n  }, []);\n\n  var onCountryChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var countryCode, url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              countryCode = e.target.value;\n              url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : \"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);\n              _context2.next = 4;\n              return fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                setInputCountry(countryCode);\n                setCountryInfo(data);\n                setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n                console.log([data.countryInfo.lat, data.countryInfo.long]);\n                setMapZoom(10);\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onCountryChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), countries.map(function (country) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.value,\n                children: country.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"COVID-19 Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__map\",\n        children: /*#__PURE__*/_jsxDEV(MapView, {\n          center: mapCenter,\n          zoom: mapZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Worldwide cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineGraph, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C/lVpoppM5WpDP/hW5dV03LbiPQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sudipta/Desktop/Youtube-covid/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","FormControl","MenuItem","Select","Card","CardContent","Table","sortData","InfoBox","LineGraph","MapView","App","countries","setCountries","country","setInputCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","e","countryCode","target","url","long","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { FormControl, MenuItem, Select, Card, CardContent } from '@material-ui/core';\nimport './App.css';\nimport Table from './Table';\nimport { sortData } from './util.js';\nimport InfoBox from './InfoBox';\nimport LineGraph from './LineGraph';\nimport MapView from './MapView';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setInputCountry] = useState('Worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -55.4796 })\n  const [mapZoom, setMapZoom] = useState(4);\n  // https://disease.sh/v3/covid-19/countries\n\n  //UseEffect-- runs a piece of code based on given condition\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data)\n      });\n\n  }, []);\n\n  useEffect(() => {\n    //async -> sends a request , wait for its response.\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => (\n            {\n              name: country.country,\n              value: country.countryInfo.iso2,\n            }\n          ));\n\n          setCountries(countries); // dropdown\n          const sortedData = sortData(data); // table data.. whole data is passed in sortData.\n          setTableData(sortedData);\n        })\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat,data.countryInfo.long]);\n        console.log([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(10);\n      });\n  };\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}>\n              <MenuItem value=\"Worldwide\">Worldwide</MenuItem>\n              {\n                countries.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n            </Select>\n\n          </FormControl>\n\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox title=\"COVID-19 Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n\n        </div>\n\n        <div className=\"app__map\">\n          <MapView center={mapCenter}\n            zoom={mapZoom} />\n\n        </div>\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3> Worldwide cases</h3>\n        </CardContent>\n        <LineGraph />\n      </Card>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}